//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace INMEDIK.Models.Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbINMEDIK : DbContext
    {
        public dbINMEDIK()
            : base("name=dbINMEDIK")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Address> Address { get; set; }
        public virtual DbSet<Advertisement> Advertisement { get; set; }
        public virtual DbSet<AHF> AHF { get; set; }
        public virtual DbSet<AHFComments> AHFComments { get; set; }
        public virtual DbSet<AHFDisease> AHFDisease { get; set; }
        public virtual DbSet<AHFFamily> AHFFamily { get; set; }
        public virtual DbSet<AlmBranchBilling> AlmBranchBilling { get; set; }
        public virtual DbSet<AlmBranchBillingPayment> AlmBranchBillingPayment { get; set; }
        public virtual DbSet<AlmBranchBillingTransaction> AlmBranchBillingTransaction { get; set; }
        public virtual DbSet<AlmBranchRequest> AlmBranchRequest { get; set; }
        public virtual DbSet<AlmBranchRequestConfirmed> AlmBranchRequestConfirmed { get; set; }
        public virtual DbSet<AlmBranchRequestConfirmedTransaction> AlmBranchRequestConfirmedTransaction { get; set; }
        public virtual DbSet<AlmBranchRequestDelivered> AlmBranchRequestDelivered { get; set; }
        public virtual DbSet<AlmBranchRequestDeliveredTransaction> AlmBranchRequestDeliveredTransaction { get; set; }
        public virtual DbSet<AlmBranchRequestRejected> AlmBranchRequestRejected { get; set; }
        public virtual DbSet<AlmBranchRequestRejectedTransaction> AlmBranchRequestRejectedTransaction { get; set; }
        public virtual DbSet<AlmBranchRequestResponse> AlmBranchRequestResponse { get; set; }
        public virtual DbSet<AlmBranchRequestResponseTransaction> AlmBranchRequestResponseTransaction { get; set; }
        public virtual DbSet<AlmBranchRequestToDelivery> AlmBranchRequestToDelivery { get; set; }
        public virtual DbSet<AlmBranchRequestToDeliveryTransaction> AlmBranchRequestToDeliveryTransaction { get; set; }
        public virtual DbSet<AlmBranchRequestTransaction> AlmBranchRequestTransaction { get; set; }
        public virtual DbSet<AlmDropStock> AlmDropStock { get; set; }
        public virtual DbSet<AlmDropStockProducts> AlmDropStockProducts { get; set; }
        public virtual DbSet<AlmFileDb> AlmFileDb { get; set; }
        public virtual DbSet<AlmFolio> AlmFolio { get; set; }
        public virtual DbSet<AlmInvoice> AlmInvoice { get; set; }
        public virtual DbSet<AlmInvoiceTransaction> AlmInvoiceTransaction { get; set; }
        public virtual DbSet<AlmMenuView> AlmMenuView { get; set; }
        public virtual DbSet<AlmOrder> AlmOrder { get; set; }
        public virtual DbSet<AlmRecordInvoice> AlmRecordInvoice { get; set; }
        public virtual DbSet<AlmRecordTransactionInvoice> AlmRecordTransactionInvoice { get; set; }
        public virtual DbSet<AlmReturn> AlmReturn { get; set; }
        public virtual DbSet<AlmReturnProducts> AlmReturnProducts { get; set; }
        public virtual DbSet<AlmRole> AlmRole { get; set; }
        public virtual DbSet<AlmStatus> AlmStatus { get; set; }
        public virtual DbSet<AlmStock> AlmStock { get; set; }
        public virtual DbSet<AlmSupplier> AlmSupplier { get; set; }
        public virtual DbSet<AlmSupplierBilling> AlmSupplierBilling { get; set; }
        public virtual DbSet<AlmSupplierBillingPayment> AlmSupplierBillingPayment { get; set; }
        public virtual DbSet<AlmSupplierFolio> AlmSupplierFolio { get; set; }
        public virtual DbSet<AlmSupplierProducts> AlmSupplierProducts { get; set; }
        public virtual DbSet<AlmSupplierRequest> AlmSupplierRequest { get; set; }
        public virtual DbSet<AlmSupplierRequestCancelled> AlmSupplierRequestCancelled { get; set; }
        public virtual DbSet<AlmSupplierRequestCancelledTransaction> AlmSupplierRequestCancelledTransaction { get; set; }
        public virtual DbSet<AlmSupplierRequestConfirmed> AlmSupplierRequestConfirmed { get; set; }
        public virtual DbSet<AlmSupplierRequestConfirmedTransaction> AlmSupplierRequestConfirmedTransaction { get; set; }
        public virtual DbSet<AlmSupplierRequestDelivered> AlmSupplierRequestDelivered { get; set; }
        public virtual DbSet<AlmSupplierRequestDeliveredTransaction> AlmSupplierRequestDeliveredTransaction { get; set; }
        public virtual DbSet<AlmSupplierRequestRejected> AlmSupplierRequestRejected { get; set; }
        public virtual DbSet<AlmSupplierRequestRejectedTransaction> AlmSupplierRequestRejectedTransaction { get; set; }
        public virtual DbSet<AlmSupplierRequestResponse> AlmSupplierRequestResponse { get; set; }
        public virtual DbSet<AlmSupplierRequestResponseTransaction> AlmSupplierRequestResponseTransaction { get; set; }
        public virtual DbSet<AlmSupplierRequestToDelivery> AlmSupplierRequestToDelivery { get; set; }
        public virtual DbSet<AlmSupplierRequestToDeliveryTransaction> AlmSupplierRequestToDeliveryTransaction { get; set; }
        public virtual DbSet<AlmSupplierRequestTransaction> AlmSupplierRequestTransaction { get; set; }
        public virtual DbSet<AlmUser> AlmUser { get; set; }
        public virtual DbSet<AlmUserSupplier> AlmUserSupplier { get; set; }
        public virtual DbSet<APNP> APNP { get; set; }
        public virtual DbSet<APP> APP { get; set; }
        public virtual DbSet<Applications> Applications { get; set; }
        public virtual DbSet<Audit> Audit { get; set; }
        public virtual DbSet<AuditDetail> AuditDetail { get; set; }
        public virtual DbSet<CancelledPackages> CancelledPackages { get; set; }
        public virtual DbSet<Cart> Cart { get; set; }
        public virtual DbSet<CartConcepts> CartConcepts { get; set; }
        public virtual DbSet<CartPackage> CartPackage { get; set; }
        public virtual DbSet<CashClosing> CashClosing { get; set; }
        public virtual DbSet<Category> Category { get; set; }
        public virtual DbSet<ChronicDisease> ChronicDisease { get; set; }
        public virtual DbSet<CIE10> CIE10 { get; set; }
        public virtual DbSet<City> City { get; set; }
        public virtual DbSet<Clinic> Clinic { get; set; }
        public virtual DbSet<Concept> Concept { get; set; }
        public virtual DbSet<Consult> Consult { get; set; }
        public virtual DbSet<CostInBranch> CostInBranch { get; set; }
        public virtual DbSet<County> County { get; set; }
        public virtual DbSet<CourseThreatment> CourseThreatment { get; set; }
        public virtual DbSet<CurrentCondition> CurrentCondition { get; set; }
        public virtual DbSet<DayOfWeek> DayOfWeek { get; set; }
        public virtual DbSet<DemoRequest> DemoRequest { get; set; }
        public virtual DbSet<Denomination> Denomination { get; set; }
        public virtual DbSet<DenominationByCashClose> DenominationByCashClose { get; set; }
        public virtual DbSet<DenominationWithdrawal> DenominationWithdrawal { get; set; }
        public virtual DbSet<DeviceAndSystems> DeviceAndSystems { get; set; }
        public virtual DbSet<Diagnostic> Diagnostic { get; set; }
        public virtual DbSet<Discount> Discount { get; set; }
        public virtual DbSet<DiscountConcept> DiscountConcept { get; set; }
        public virtual DbSet<DiscountType> DiscountType { get; set; }
        public virtual DbSet<Disease> Disease { get; set; }
        public virtual DbSet<ElectronicFile> ElectronicFile { get; set; }
        public virtual DbSet<ElectronicFileUpdate> ElectronicFileUpdate { get; set; }
        public virtual DbSet<ElectronicFileUpdatesHistoric> ElectronicFileUpdatesHistoric { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<EvFile> EvFile { get; set; }
        public virtual DbSet<EvolComments> EvolComments { get; set; }
        public virtual DbSet<EvolCourseThreatment> EvolCourseThreatment { get; set; }
        public virtual DbSet<EvolCurrentCondition> EvolCurrentCondition { get; set; }
        public virtual DbSet<EvolDiagnostic> EvolDiagnostic { get; set; }
        public virtual DbSet<EvolExploration> EvolExploration { get; set; }
        public virtual DbSet<EvolPreviousResult> EvolPreviousResult { get; set; }
        public virtual DbSet<EvolutionNote> EvolutionNote { get; set; }
        public virtual DbSet<Exam> Exam { get; set; }
        public virtual DbSet<Expenses> Expenses { get; set; }
        public virtual DbSet<Exploration> Exploration { get; set; }
        public virtual DbSet<Field> Field { get; set; }
        public virtual DbSet<FieldOption> FieldOption { get; set; }
        public virtual DbSet<FieldType> FieldType { get; set; }
        public virtual DbSet<FileDb> FileDb { get; set; }
        public virtual DbSet<Form> Form { get; set; }
        public virtual DbSet<FormData> FormData { get; set; }
        public virtual DbSet<HoursOfDay> HoursOfDay { get; set; }
        public virtual DbSet<Indication> Indication { get; set; }
        public virtual DbSet<InterconsultNote> InterconsultNote { get; set; }
        public virtual DbSet<Internment> Internment { get; set; }
        public virtual DbSet<InternmentMaterial> InternmentMaterial { get; set; }
        public virtual DbSet<Invoice> Invoice { get; set; }
        public virtual DbSet<InvoiceMovement> InvoiceMovement { get; set; }
        public virtual DbSet<IReturn> IReturn { get; set; }
        public virtual DbSet<IReturnProducts> IReturnProducts { get; set; }
        public virtual DbSet<Keywords> Keywords { get; set; }
        public virtual DbSet<Laboratory> Laboratory { get; set; }
        public virtual DbSet<MedicalIndication> MedicalIndication { get; set; }
        public virtual DbSet<MedicalNotes> MedicalNotes { get; set; }
        public virtual DbSet<Medicines> Medicines { get; set; }
        public virtual DbSet<MenuView> MenuView { get; set; }
        public virtual DbSet<Module> Module { get; set; }
        public virtual DbSet<Nationality> Nationality { get; set; }
        public virtual DbSet<NurseryMeasurements> NurseryMeasurements { get; set; }
        public virtual DbSet<NurserySummary> NurserySummary { get; set; }
        public virtual DbSet<OrderPackage> OrderPackage { get; set; }
        public virtual DbSet<OrderPromotion> OrderPromotion { get; set; }
        public virtual DbSet<OrderPromotionDiscountApplied> OrderPromotionDiscountApplied { get; set; }
        public virtual DbSet<Orders> Orders { get; set; }
        public virtual DbSet<OrdersConcepts> OrdersConcepts { get; set; }
        public virtual DbSet<Package> Package { get; set; }
        public virtual DbSet<PackageConcept> PackageConcept { get; set; }
        public virtual DbSet<Parameter> Parameter { get; set; }
        public virtual DbSet<Patient> Patient { get; set; }
        public virtual DbSet<Payment> Payment { get; set; }
        public virtual DbSet<PaymentType> PaymentType { get; set; }
        public virtual DbSet<Person> Person { get; set; }
        public virtual DbSet<PreviousResult> PreviousResult { get; set; }
        public virtual DbSet<Product> Product { get; set; }
        public virtual DbSet<ProductNote> ProductNote { get; set; }
        public virtual DbSet<ProductWarehouse> ProductWarehouse { get; set; }
        public virtual DbSet<Recipe> Recipe { get; set; }
        public virtual DbSet<RecordInvoice> RecordInvoice { get; set; }
        public virtual DbSet<RecordTransactionInvoice> RecordTransactionInvoice { get; set; }
        public virtual DbSet<ReferenceNote> ReferenceNote { get; set; }
        public virtual DbSet<RelFormField> RelFormField { get; set; }
        public virtual DbSet<RelFormModule> RelFormModule { get; set; }
        public virtual DbSet<RelModuleField> RelModuleField { get; set; }
        public virtual DbSet<RequestedMaterial> RequestedMaterial { get; set; }
        public virtual DbSet<RequestMaterial> RequestMaterial { get; set; }
        public virtual DbSet<Role> Role { get; set; }
        public virtual DbSet<RouteOfAdministration> RouteOfAdministration { get; set; }
        public virtual DbSet<Schedule> Schedule { get; set; }
        public virtual DbSet<Service> Service { get; set; }
        public virtual DbSet<Specialty> Specialty { get; set; }
        public virtual DbSet<State> State { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<Stock> Stock { get; set; }
        public virtual DbSet<Supplier> Supplier { get; set; }
        public virtual DbSet<tabletCart> tabletCart { get; set; }
        public virtual DbSet<tabletCartConcepts> tabletCartConcepts { get; set; }
        public virtual DbSet<Template> Template { get; set; }
        public virtual DbSet<Test> Test { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<WaitingTimeCalc> WaitingTimeCalc { get; set; }
        public virtual DbSet<WaitingTimeResult> WaitingTimeResult { get; set; }
        public virtual DbSet<WaitingTimes> WaitingTimes { get; set; }
        public virtual DbSet<Warehouse> Warehouse { get; set; }
        public virtual DbSet<WarehouseSuply> WarehouseSuply { get; set; }
        public virtual DbSet<Withdrawal> Withdrawal { get; set; }
        public virtual DbSet<Xray> Xray { get; set; }
        public virtual DbSet<vwAllConcepts> vwAllConcepts { get; set; }
        public virtual DbSet<vwAllConcepts_ant> vwAllConcepts_ant { get; set; }
        public virtual DbSet<vwAllConceptsOnlyProducts> vwAllConceptsOnlyProducts { get; set; }
        public virtual DbSet<vwAllProducts> vwAllProducts { get; set; }
        public virtual DbSet<vwAllProductsExist> vwAllProductsExist { get; set; }
        public virtual DbSet<vwAlmAllConcepts> vwAlmAllConcepts { get; set; }
        public virtual DbSet<vwAlmBranchBilling> vwAlmBranchBilling { get; set; }
        public virtual DbSet<vwAlmBranchBillingConceptDetail> vwAlmBranchBillingConceptDetail { get; set; }
        public virtual DbSet<vwAlmBranchReportFactToCharge> vwAlmBranchReportFactToCharge { get; set; }
        public virtual DbSet<vwAlmBranchReqResult> vwAlmBranchReqResult { get; set; }
        public virtual DbSet<vwAlmBranchRequest> vwAlmBranchRequest { get; set; }
        public virtual DbSet<vwAlmBranchRequestConfirmed> vwAlmBranchRequestConfirmed { get; set; }
        public virtual DbSet<vwAlmBranchRequestConfirmedTransaction> vwAlmBranchRequestConfirmedTransaction { get; set; }
        public virtual DbSet<vwAlmBranchRequestDelivered> vwAlmBranchRequestDelivered { get; set; }
        public virtual DbSet<vwAlmBranchRequestDeliveredTransaction> vwAlmBranchRequestDeliveredTransaction { get; set; }
        public virtual DbSet<vwAlmBranchRequestRejected> vwAlmBranchRequestRejected { get; set; }
        public virtual DbSet<vwAlmBranchRequestRejectedTransaction> vwAlmBranchRequestRejectedTransaction { get; set; }
        public virtual DbSet<vwAlmBranchRequestResponse> vwAlmBranchRequestResponse { get; set; }
        public virtual DbSet<vwAlmBranchRequestResponseTransaction> vwAlmBranchRequestResponseTransaction { get; set; }
        public virtual DbSet<vwAlmBranchRequestToDelivery> vwAlmBranchRequestToDelivery { get; set; }
        public virtual DbSet<vwAlmBranchRequestToDeliveryTransaction> vwAlmBranchRequestToDeliveryTransaction { get; set; }
        public virtual DbSet<vwAlmSupplierBilling> vwAlmSupplierBilling { get; set; }
        public virtual DbSet<vwAlmSupplierBillingConceptDetail> vwAlmSupplierBillingConceptDetail { get; set; }
        public virtual DbSet<vwAlmSupplierReportFactToPay> vwAlmSupplierReportFactToPay { get; set; }
        public virtual DbSet<vwAlmSupplierReqResult> vwAlmSupplierReqResult { get; set; }
        public virtual DbSet<vwAlmSupplierRequest> vwAlmSupplierRequest { get; set; }
        public virtual DbSet<vwAlmSupplierRequestCancelled> vwAlmSupplierRequestCancelled { get; set; }
        public virtual DbSet<vwAlmSupplierRequestCancelledTransaction> vwAlmSupplierRequestCancelledTransaction { get; set; }
        public virtual DbSet<vwAlmSupplierRequestConfirmed> vwAlmSupplierRequestConfirmed { get; set; }
        public virtual DbSet<vwAlmSupplierRequestConfirmedTransaction> vwAlmSupplierRequestConfirmedTransaction { get; set; }
        public virtual DbSet<vwAlmSupplierRequestDelivered> vwAlmSupplierRequestDelivered { get; set; }
        public virtual DbSet<vwAlmSupplierRequestDeliveredTransaction> vwAlmSupplierRequestDeliveredTransaction { get; set; }
        public virtual DbSet<vwAlmSupplierRequestRejected> vwAlmSupplierRequestRejected { get; set; }
        public virtual DbSet<vwAlmSupplierRequestRejectedTransaction> vwAlmSupplierRequestRejectedTransaction { get; set; }
        public virtual DbSet<vwAlmSupplierRequestResponse> vwAlmSupplierRequestResponse { get; set; }
        public virtual DbSet<vwAlmSupplierRequestResponseHeader> vwAlmSupplierRequestResponseHeader { get; set; }
        public virtual DbSet<vwAlmSupplierRequestResponseTransaction> vwAlmSupplierRequestResponseTransaction { get; set; }
        public virtual DbSet<vwAlmSupplierRequestSupplier> vwAlmSupplierRequestSupplier { get; set; }
        public virtual DbSet<vwAlmSupplierRequestToDelivery> vwAlmSupplierRequestToDelivery { get; set; }
        public virtual DbSet<vwAlmSupplierRequestToDeliveryTransaction> vwAlmSupplierRequestToDeliveryTransaction { get; set; }
        public virtual DbSet<vwAlmSupplierRequestTransaction> vwAlmSupplierRequestTransaction { get; set; }
        public virtual DbSet<vwAlmUserTimeHandler> vwAlmUserTimeHandler { get; set; }
        public virtual DbSet<vwCancelledPackages> vwCancelledPackages { get; set; }
        public virtual DbSet<vwCancelledTickets> vwCancelledTickets { get; set; }
        public virtual DbSet<vwCardPayments> vwCardPayments { get; set; }
        public virtual DbSet<vwCashClosing> vwCashClosing { get; set; }
        public virtual DbSet<vwClinics> vwClinics { get; set; }
        public virtual DbSet<vwConceptProductivity> vwConceptProductivity { get; set; }
        public virtual DbSet<vwConsultByPatient> vwConsultByPatient { get; set; }
        public virtual DbSet<vwCountyServices> vwCountyServices { get; set; }
        public virtual DbSet<vwDepartamentProductivity> vwDepartamentProductivity { get; set; }
        public virtual DbSet<vwDiscountClinic> vwDiscountClinic { get; set; }
        public virtual DbSet<vwDonations> vwDonations { get; set; }
        public virtual DbSet<vwElectronicFile> vwElectronicFile { get; set; }
        public virtual DbSet<vwElectronicFilesUpdates> vwElectronicFilesUpdates { get; set; }
        public virtual DbSet<vwField> vwField { get; set; }
        public virtual DbSet<vwForm> vwForm { get; set; }
        public virtual DbSet<vwInternment> vwInternment { get; set; }
        public virtual DbSet<vwIReturnHeader> vwIReturnHeader { get; set; }
        public virtual DbSet<vwMaterialForRequest> vwMaterialForRequest { get; set; }
        public virtual DbSet<vwMedicProductivity> vwMedicProductivity { get; set; }
        public virtual DbSet<vwModule> vwModule { get; set; }
        public virtual DbSet<vwPatientChronicDisease> vwPatientChronicDisease { get; set; }
        public virtual DbSet<vwPatientsId> vwPatientsId { get; set; }
        public virtual DbSet<vwPaymentReport> vwPaymentReport { get; set; }
        public virtual DbSet<vwPharmacyProductivity> vwPharmacyProductivity { get; set; }
        public virtual DbSet<vwProductivityConcept> vwProductivityConcept { get; set; }
        public virtual DbSet<vwProductivityMedic> vwProductivityMedic { get; set; }
        public virtual DbSet<vwRecipe> vwRecipe { get; set; }
        public virtual DbSet<vwReportHealth> vwReportHealth { get; set; }
        public virtual DbSet<vwRoundings> vwRoundings { get; set; }
        public virtual DbSet<vwSales> vwSales { get; set; }
        public virtual DbSet<vwStock> vwStock { get; set; }
        public virtual DbSet<vwStockConcept> vwStockConcept { get; set; }
        public virtual DbSet<vwUserTimeHandler> vwUserTimeHandler { get; set; }
        public virtual DbSet<vwWaitingTimes> vwWaitingTimes { get; set; }
        public virtual DbSet<vwWarehouseStock> vwWarehouseStock { get; set; }
    
        public virtual int sp_calc_supplierrequest(Nullable<System.DateTime> referenceDate)
        {
            var referenceDateParameter = referenceDate.HasValue ?
                new ObjectParameter("referenceDate", referenceDate) :
                new ObjectParameter("referenceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_calc_supplierrequest", referenceDateParameter);
        }
    
        public virtual int sp_calc_warehouserequest(Nullable<System.DateTime> referenceDate, Nullable<int> clinicId)
        {
            var referenceDateParameter = referenceDate.HasValue ?
                new ObjectParameter("referenceDate", referenceDate) :
                new ObjectParameter("referenceDate", typeof(System.DateTime));
    
            var clinicIdParameter = clinicId.HasValue ?
                new ObjectParameter("clinicId", clinicId) :
                new ObjectParameter("clinicId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_calc_warehouserequest", referenceDateParameter, clinicIdParameter);
        }
    
        public virtual ObjectResult<sp_getConceptsAutoComplete_Result> sp_getConceptsAutoComplete(string input, string categoryName)
        {
            var inputParameter = input != null ?
                new ObjectParameter("input", input) :
                new ObjectParameter("input", typeof(string));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("categoryName", categoryName) :
                new ObjectParameter("categoryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getConceptsAutoComplete_Result>("sp_getConceptsAutoComplete", inputParameter, categoryNameParameter);
        }
    
        public virtual int sp_getSales(string order_column, string dateBegin, string dateEnd, string ticket, string clinic, string employeeName, string patientName, string total, string discount, string paid, string cancelled, string startRowIndex, string pageSize, string clinicIds, ObjectParameter totalCount)
        {
            var order_columnParameter = order_column != null ?
                new ObjectParameter("Order_column", order_column) :
                new ObjectParameter("Order_column", typeof(string));
    
            var dateBeginParameter = dateBegin != null ?
                new ObjectParameter("DateBegin", dateBegin) :
                new ObjectParameter("DateBegin", typeof(string));
    
            var dateEndParameter = dateEnd != null ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(string));
    
            var ticketParameter = ticket != null ?
                new ObjectParameter("Ticket", ticket) :
                new ObjectParameter("Ticket", typeof(string));
    
            var clinicParameter = clinic != null ?
                new ObjectParameter("Clinic", clinic) :
                new ObjectParameter("Clinic", typeof(string));
    
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            var patientNameParameter = patientName != null ?
                new ObjectParameter("PatientName", patientName) :
                new ObjectParameter("PatientName", typeof(string));
    
            var totalParameter = total != null ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(string));
    
            var discountParameter = discount != null ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(string));
    
            var paidParameter = paid != null ?
                new ObjectParameter("Paid", paid) :
                new ObjectParameter("Paid", typeof(string));
    
            var cancelledParameter = cancelled != null ?
                new ObjectParameter("Cancelled", cancelled) :
                new ObjectParameter("Cancelled", typeof(string));
    
            var startRowIndexParameter = startRowIndex != null ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(string));
    
            var pageSizeParameter = pageSize != null ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(string));
    
            var clinicIdsParameter = clinicIds != null ?
                new ObjectParameter("clinicIds", clinicIds) :
                new ObjectParameter("clinicIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getSales", order_columnParameter, dateBeginParameter, dateEndParameter, ticketParameter, clinicParameter, employeeNameParameter, patientNameParameter, totalParameter, discountParameter, paidParameter, cancelledParameter, startRowIndexParameter, pageSizeParameter, clinicIdsParameter, totalCount);
        }
    
        public virtual ObjectResult<sp_reportLastPurchaseByProduct_Result> sp_reportLastPurchaseByProduct(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> conceptId)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var conceptIdParameter = conceptId.HasValue ?
                new ObjectParameter("conceptId", conceptId) :
                new ObjectParameter("conceptId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_reportLastPurchaseByProduct_Result>("sp_reportLastPurchaseByProduct", startDateParameter, endDateParameter, conceptIdParameter);
        }
    }
}
