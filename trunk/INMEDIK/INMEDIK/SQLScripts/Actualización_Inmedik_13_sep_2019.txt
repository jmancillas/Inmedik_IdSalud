/*
Deployment script for dbIdSalud_express

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "dbIdSalud_express"
:setvar DefaultFilePrefix "dbIdSalud_express"
:setvar DefaultDataPath "F:\Data\"
:setvar DefaultLogPath "F:\Log\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Altering [dbo].[User]...';


GO
ALTER TABLE [dbo].[User]
    ADD [CurrentClinicId] INT NULL;


GO
PRINT N'Starting rebuilding table [dbo].[WaitingTimes]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_WaitingTimes] (
    [Id]                        INT      IDENTITY (1, 1) NOT NULL,
    [AttendingTimePatientRecS]  DATETIME NULL,
    [AttendingTimePatientRecF]  DATETIME NULL,
    [WaitingTimePatientRecInfS] DATETIME NULL,
    [WaitingTimePatientRecInfF] DATETIME NULL,
    [AttendingTimePatientInfS]  DATETIME NULL,
    [AttendingTimePatientInfF]  DATETIME NULL,
    [WaitingTimePatientInfConS] DATETIME NULL,
    [WaitingTimePatientInfConF] DATETIME NULL,
    [AttendingTimePatientConS]  DATETIME NULL,
    [AttendingTimePatientConF]  DATETIME NULL,
    [ConsultId]                 INT      NULL,
    [Created]                   DATETIME NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_WaitingTimes1] PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[WaitingTimes])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_WaitingTimes] ON;
        INSERT INTO [dbo].[tmp_ms_xx_WaitingTimes] ([Id], [ConsultId], [AttendingTimePatientRecS], [AttendingTimePatientRecF], [WaitingTimePatientRecInfS], [WaitingTimePatientRecInfF], [AttendingTimePatientInfS], [AttendingTimePatientInfF], [WaitingTimePatientInfConS], [WaitingTimePatientInfConF], [AttendingTimePatientConS], [AttendingTimePatientConF])
        SELECT   [Id],
                 [ConsultId],
                 [AttendingTimePatientRecS],
                 [AttendingTimePatientRecF],
                 [WaitingTimePatientRecInfS],
                 [WaitingTimePatientRecInfF],
                 [AttendingTimePatientInfS],
                 [AttendingTimePatientInfF],
                 [WaitingTimePatientInfConS],
                 [WaitingTimePatientInfConF],
                 [AttendingTimePatientConS],
                 [AttendingTimePatientConF]
        FROM     [dbo].[WaitingTimes]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_WaitingTimes] OFF;
    END

DROP TABLE [dbo].[WaitingTimes];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_WaitingTimes]', N'WaitingTimes';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_WaitingTimes1]', N'PK_WaitingTimes', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[WaitingTimeCalc]...';


GO
CREATE TABLE [dbo].[WaitingTimeCalc] (
    [Id]                  INT           IDENTITY (1, 1) NOT NULL,
    [WaitingTimeId]       INT           NOT NULL,
    [StartProcess]        NVARCHAR (50) NULL,
    [StartStageReception] NVARCHAR (50) NULL,
    [EndStageReception]   NVARCHAR (50) NULL,
    [TAPReception]        INT           NULL,
    [TEPRecNur]           INT           NULL,
    [StartStageNursery]   NVARCHAR (50) NULL,
    [EndStageNursery]     NVARCHAR (50) NULL,
    [TAPNursery]          INT           NULL,
    [TEPNurMed]           INT           NULL,
    [StartStageMedic]     NVARCHAR (50) NULL,
    [EndStageMedic]       NVARCHAR (50) NULL,
    [TAPMedic]            INT           NULL,
    [EndProcess]          NVARCHAR (50) NULL,
    [TotalMinutes]        INT           NULL,
    CONSTRAINT [PK__WaitingT__3214EC07782C143C] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[WaitingTimeResult]...';


GO
CREATE TABLE [dbo].[WaitingTimeResult] (
    [Id]                  INT           IDENTITY (1, 1) NOT NULL,
    [WaitingTimeId]       INT           NOT NULL,
    [StartProcess]        NVARCHAR (50) NULL,
    [StartStageReception] NVARCHAR (50) NULL,
    [EndStageReception]   NVARCHAR (50) NULL,
    [TAPReception]        NVARCHAR (50) NULL,
    [TEPRecNur]           NVARCHAR (50) NULL,
    [StartStageNursery]   NVARCHAR (50) NULL,
    [EndStageNursery]     NVARCHAR (50) NULL,
    [TAPNursery]          NVARCHAR (50) NULL,
    [TEPNurMed]           NVARCHAR (50) NULL,
    [StartStageMedic]     NVARCHAR (50) NULL,
    [EndStageMedic]       NVARCHAR (50) NULL,
    [EndProcess]          NVARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[FK_WaitingTimes_Consult]...';


GO
ALTER TABLE [dbo].[WaitingTimes] WITH NOCHECK
    ADD CONSTRAINT [FK_WaitingTimes_Consult] FOREIGN KEY ([ConsultId]) REFERENCES [dbo].[Consult] ([id]);


GO
PRINT N'Creating [dbo].[FK_WaitingTimeCalc_WaitingTimes]...';


GO
ALTER TABLE [dbo].[WaitingTimeCalc] WITH NOCHECK
    ADD CONSTRAINT [FK_WaitingTimeCalc_WaitingTimes] FOREIGN KEY ([WaitingTimeId]) REFERENCES [dbo].[WaitingTimes] ([Id]);


GO
PRINT N'Creating [dbo].[FK_User_Clinic]...';


GO
ALTER TABLE [dbo].[User] WITH NOCHECK
    ADD CONSTRAINT [FK_User_Clinic] FOREIGN KEY ([CurrentClinicId]) REFERENCES [dbo].[Clinic] ([id]);


GO
PRINT N'Refreshing [dbo].[vwField]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vwField]';


GO
PRINT N'Refreshing [dbo].[vwMedicProductivity]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vwMedicProductivity]';


GO
PRINT N'Refreshing [dbo].[vwModule]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vwModule]';


GO
PRINT N'Refreshing [dbo].[vwPharmacyProductivity]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[vwPharmacyProductivity]';


GO
PRINT N'Altering [dbo].[vwSchedule]...';


GO

ALTER VIEW [dbo].[vwSchedule]
AS
SELECT        a.id, a.OrderId, a.PatientId, a.ClinicId, a.MedicId, a.StatusId, a.ConceptId, a.Scheduled, 
'' AS sScheduled, 
pp.Name + ' ' + pp.LastName AS PatientName, 
                         pp.BirthDate AS PatientBirthDate, cl.Name AS ClinicName, ISNULL(pe.Name + ' ' + pe.LastName, a.medicnames) AS MedicName, s.Name AS StatusName, 
                         ISNULL(co.Name, a.conceptsnames) AS ConceptName, a.catname AS CategoryName, o.Created AS OrderCreated
/*, FORMAT(o.Created, 'dd/MM/yyyy HH:mm:ss') AS sOrderCreated*/ FROM (SELECT        id, OrderId, PatientId, ClinicId, MedicId, NULL AS medicnames, StatusId, ConceptId, NULL AS conceptsnames, Scheduled, 'Consultas' as catname
                FROM            dbo.Consult
                UNION
                SELECT        ex.id, ex.OrderId, ex.PatientId, ex.ClinicId, NULL, STUFF
                                                ((SELECT DISTINCT ', ' + p.Name + ' ' + p.LastName
                                                    FROM            Employee e INNER JOIN
                                                                            Person p ON p.id = e.PersonId INNER JOIN
                                                                            Exam exa ON e.id = exa.MedicId
                                                    WHERE        exa.OrderId = ex.OrderId FOR XML PATH(''), TYPE ).value('.', 'NVARCHAR(MAX)'), 1, 1, '') medicnames, ex.StatusId, NULL, 
                                            STUFF
                                                ((SELECT DISTINCT ', ' + c.[Name]
                                                    FROM            Concept c INNER JOIN
                                                                            Exam e ON c.id = e.ConceptId
                                                    WHERE        e.OrderId = ex.OrderId FOR XML PATH(''), TYPE ).value('.', 'NVARCHAR(MAX)'), 1, 1, '') conceptsnames, NULL, 'Exámenes' as catname
                FROM            Orders o INNER JOIN
                                            Exam ex ON ex.OrderId = o.id
                WHERE        ex.id =
                                                (SELECT        MAX(ex.id)
                                                FROM            Exam ex
                                                WHERE        ex.OrderId = o.id)
                UNION
                SELECT        id, OrderId, PatientId, ClinicId, MedicId, NULL AS medicnames, StatusId, ConceptId, NULL AS conceptsnames, NULL AS Expr1, 'Servicios' as catname
                FROM            dbo.Service) AS a LEFT OUTER JOIN
dbo.Patient AS p ON p.id = a.PatientId LEFT OUTER JOIN
                         dbo.Person AS pp ON pp.id = p.PersonId LEFT OUTER JOIN
                         dbo.Clinic AS cl ON cl.id = a.ClinicId LEFT OUTER JOIN
                         dbo.Employee AS e ON e.id = a.MedicId LEFT OUTER JOIN
                         dbo.Person AS pe ON pe.id = e.PersonId LEFT OUTER JOIN
                         dbo.Status AS s ON s.id = a.StatusId LEFT OUTER JOIN
                         dbo.Concept AS co ON co.id = a.ConceptId LEFT OUTER JOIN
--                         dbo.Category AS ca ON ca.id = co.CategoryId LEFT OUTER JOIN
                         dbo.Orders AS o ON o.id = a.OrderId
GO
PRINT N'Creating [dbo].[vwClinics]...';


GO
CREATE VIEW dbo.vwClinics
AS
SELECT        TOP (100) PERCENT id, AddressId, Name, PhoneNumber, Email, Deleted, IsExternal, Created, Updated, AllowDonations, MinDonation, RFC, WithdrawalAt, Percentage
FROM            dbo.Clinic
WHERE        (Deleted <> 1) AND (IsExternal <> 1)
ORDER BY Name
GO
PRINT N'Creating [dbo].[vwWaitingTimes]...';


GO
CREATE VIEW dbo.vwWaitingTimes
AS
SELECT        wc.Id, w.ConsultId, pa.id AS PatientId, pe.Name + ' ' + pe.LastName AS FullName, w.Created, cl.id AS ClinicId, cl.Name AS ClinicName, wc.StartProcess, wc.StartStageReception, wc.EndStageReception, 
                         wc.TAPReception, wc.TEPRecNur, wc.StartStageNursery, wc.EndStageNursery, wc.TAPNursery, wc.TEPNurMed, wc.StartStageMedic, wc.EndStageMedic, wc.TAPMedic, wc.EndProcess, wc.TotalMinutes
FROM            dbo.WaitingTimeCalc AS wc INNER JOIN
                         dbo.WaitingTimes AS w ON wc.WaitingTimeId = w.Id INNER JOIN
                         dbo.Consult AS c ON w.ConsultId = c.id INNER JOIN
                         dbo.Patient AS pa ON c.PatientId = pa.id INNER JOIN
                         dbo.Person AS pe ON pa.PersonId = pe.id INNER JOIN
                         dbo.Clinic AS cl ON c.ClinicId = cl.id
GO
PRINT N'Creating [dbo].[sp_getConceptsAutoComplete]...';


GO
-- =============================================
-- Author:		Joan Saavedra
-- Create date: 08082019
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[sp_getConceptsAutoComplete] 
	-- Add the parameters for the stored procedure here
	@input nvarchar(200) = '', 
	@categoryName nvarchar(200) = null
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	SELECT TOP 15 id, categoryname, name, code 
	FROM(
			SELECT       c1.id, c2.Name AS CategoryName, c1.Name, p.code
			FROM            Concept c1 INNER JOIN
									 Category c2 ON c1.CategoryId = c2.id 
									 left join product p on p.conceptid = c1.id
			WHERE
				c1.deleted = 0 AND
				(c2.Name = @categoryName OR @categoryName is null)
				AND (code LIKE ('%'+@input+'%') 
					OR  c1.name LIKE ('%'+@input+'%'))
			UNION
			SELECT        p.id, c2.Name AS CategoryName, p.Name, '' as code
			FROM            Package p INNER JOIN
									 Category c2 ON p.CategoryId = c2.id
			WHERE
				p.deleted = 0 AND
				(c2.Name = @categoryName OR @categoryName is null)
				AND  p.name LIKE ('%'+@input+'%')
		)x
	order by name
END
GO
PRINT N'Creating [dbo].[sp_getSales]...';


GO

-- =============================================
-- Author:		Joan Saavedra
-- Create date: 09/08/2019
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[sp_getSales] 
	-- Add the parameters for the stored procedure here
	@Order_column nvarchar(50) = null, 
	@DateBegin varchar(50),
	@DateEnd varchar(50) = null,
	@Ticket nvarchar(50) = null,
	@Clinic nvarchar(100) = null,
	@EmployeeName nvarchar(500) = null,
	@PatientName nvarchar(500) = null,
	@Total nvarchar(50) = null,
	@Discount nvarchar(50) = null,
	@Paid varchar(1) = null,
	@Cancelled varchar(1) = null,
	@startRowIndex nvarchar(50) = null,
    @pageSize nvarchar(50) = null,
	@clinicIds nvarchar(500) = null
	,@totalCount int output
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
   DECLARE @SQLStatement nvarchar(max) = '';
   DECLARE @SQLStatementHeader nvarchar(max);
   SET @SQLStatementHeader =	
	'CREATE TABLE #temp_person ([id] [int] NOT NULL primary key,[FullName] [nvarchar](200) NOT NULL);
	CREATE NONCLUSTERED INDEX [IX_bigtemptable] ON #temp_person ([id] ASC);
	CREATE TABLE #temp_person2 ([id] [int] NOT NULL primary key,[FullName] [nvarchar](200) NOT NULL);
	CREATE NONCLUSTERED INDEX [IX_bigtemptable] ON #temp_person2 ([id] ASC);
	';
  SET @SQLStatementHeader +=
	'
	INSERT INTO #temp_person
	select id, Fullname 
	FROM
	(select
	p.id,
	UPPER(p.Name + '' '' + p.LastName) AS FullName
	from person p)x
	';
	IF(@EmployeeName is not null)
		SET @SQLStatementHeader += ' WHERE fullname LIKE ''%'' + @EN + ''%'' ';
	;
	SET @SQLStatementHeader +=
	'
	INSERT INTO #temp_person2
	select id, Fullname 
	FROM
	(select
	p.id,
	UPPER(p.Name + '' '' + p.LastName) AS FullName
	from person p)x
	';
	
	IF(@PatientName is not null)
		SET @SQLStatementHeader += ' WHERE fullname LIKE ''%'' + @PN + ''%'' ';
	;
	SET @SQLStatement +=
	'
	select orderid, orderticket, ticket, clinicId, clinicname, employeefullname, patientfullname, amount, discount, paid, iscanceled, created
	from (
		select 
		o.id as orderid,
		o.ticket as orderticket,
		ISNULL(CAST(o.ticket AS varchar) + '' - '' + CAST(p.id AS varchar), '''') AS Ticket, 
		c.id as clinicId,
		c.Name AS ClinicName
		,per.fullname as employeefullname
		,perpat.fullname as patientfullname
		,p.amount + p.commission as amount,
		o.discount,
		o.paid,
		o.iscanceled,
		p.created
		 from orders o 
		 inner join payment p on o.id = p.orderid
		 inner join patient pat on pat.id = o.patientid
		inner join clinic c on c.id = p.clinicid
		inner join employee e on e.id =  p.employeeid
		inner join #temp_person per on per.id = e.personid
		inner join #temp_person2 perPat on perPat.id = pat.personid
		)x
	';
	IF(@DateBegin is not null)
		BEGIN
			SET @SQLStatement  += ' WHERE created >= @DBegin ';
		END;
	IF(@DateEnd is not null)
	BEGIN
		SET @SQLStatement  += ' AND created <=  @DEnd ';
	END;
	IF(@Ticket is not null)
		SET @SQLStatement += ' AND orderticket LIKE ''%'' + @Tick + ''%'' ';
	;
	IF(@Clinic is not null)
		SET @SQLStatement += ' AND clinicname LIKE ''%'' + @CN + ''%'' ';
	;
	IF(@Total is not null)
		SET @SQLStatement += ' AND amount LIKE ''%'' + @Tot + ''%'' ';
	;
	IF(@Discount is not null)
		SET @SQLStatement += ' AND discount LIKE ''%'' + @Di + ''%'' ';
	;
	IF(@Paid is not null)
		SET @SQLStatement += ' AND paid = @Pai ' ;
	;
	IF(@Cancelled is not null)
		SET @SQLStatement += ' AND iscanceled = @Cancel ';
	;
	IF(@clinicIds is not null)
		SET @SQLStatement += ' AND clinicId in '+ @clinicIds +' ';
	;
	DECLARE @SQLBeforeSkip nvarchar(max);
	SET @SQLBeforeSkip = @SQLStatement;
	IF(@Order_column is not null)
		BEGIN
			SET @SQLStatement += ' order by ' + @Order_column;
			IF(@startRowIndex is not null)
			SET @SQLStatement += ' OFFSET CAST(@startidx as int) ROWS ';
			IF(@pageSize is not null)
			SET @SQLStatement += ' FETCH NEXT CAST(@pageS as int) ROWS ONLY '
		END;
	SET @SQLStatement += ' select @counting = COUNT(orderid) FROM (' + @SQLBeforeSkip + ')y ;';

	SET @SQLStatement += ' DROP TABLE #temp_person; DROP TABLE #temp_person2;';
	SET @SQLStatement += ' return select @counting;';
	SET @SQLStatement = @SQLStatementHeader + @SQLStatement;
	print @SQLStatement;
	DECLARE @counting_out int;
	DECLARE @paramdef nvarchar(500);
	
	SET @paramdef = N' @counting int OUTPUT, @DBegin varchar(50), @EN nvarchar(500) , 
					   @PN nvarchar(500), @DEnd varchar(50),@Tick nvarchar(50), @CN nvarchar(100), @Tot nvarchar(50), 
					   @Di nvarchar(50), @Pai varchar(1), @Cancel varchar(1), @startidx nvarchar(50), @pageS nvarchar(50)';

	EXEC sp_executesql @SQLStatement, 
						@paramdef,
						@counting = @counting_out OUTPUT,
						@DBegin = @DateBegin,
						@EN = @EmployeeName,
						@PN = @PatientName,
						@DEnd = @DateEnd,
						@Tick = @Ticket,
						@CN = @Clinic,
						@Tot = @Total,
						@Di = @Discount,
						@Pai = @Paid,
						@Cancel = @Cancelled,
						@startidx = @startRowIndex,
						@pageS = @pageSize;
	SET @totalCount = @counting_out;
END
GO
PRINT N'Creating [dbo].[vwClinics].[MS_DiagramPane1]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Clinic"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 211
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'vwClinics';


GO
PRINT N'Creating [dbo].[vwClinics].[MS_DiagramPaneCount]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'vwClinics';


GO
PRINT N'Creating [dbo].[vwWaitingTimes].[MS_DiagramPaneCount]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 2, @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'vwWaitingTimes';


GO
PRINT N'Creating [dbo].[vwWaitingTimes].[MS_DiagramPane1]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "c"
            Begin Extent = 
               Top = 204
               Left = 370
               Bottom = 360
               Right = 579
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "pa"
            Begin Extent = 
               Top = 6
               Left = 609
               Bottom = 136
               Right = 818
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "pe"
            Begin Extent = 
               Top = 24
               Left = 912
               Bottom = 154
               Right = 1121
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "cl"
            Begin Extent = 
               Top = 256
               Left = 850
               Bottom = 386
               Right = 1059
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "w"
            Begin Extent = 
               Top = 16
               Left = 36
               Bottom = 290
               Right = 272
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "wc"
            Begin Extent = 
               Top = 0
               Left = 328
               Bottom = 130
               Right = 537
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'vwWaitingTimes';


GO
PRINT N'Creating [dbo].[vwWaitingTimes].[MS_DiagramPane2]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane2', @value = N'         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 2025
         GroupBy = 1350
         Filter = 600
         Or = 450
         Or = 450
         Or = 1350
      End
   End
End
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'vwWaitingTimes';


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[WaitingTimes] WITH CHECK CHECK CONSTRAINT [FK_WaitingTimes_Consult];

ALTER TABLE [dbo].[WaitingTimeCalc] WITH CHECK CHECK CONSTRAINT [FK_WaitingTimeCalc_WaitingTimes];

ALTER TABLE [dbo].[User] WITH CHECK CHECK CONSTRAINT [FK_User_Clinic];


GO
PRINT N'Update complete.';


GO
